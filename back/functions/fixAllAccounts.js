const db = require("./src/config/firebase");
const bcrypt = require("bcrypt");

async function fixAllAccounts() {
  try {
    console.log("üîß Correction de tous les comptes utilisateurs...");
    
    const hashedPassword = await bcrypt.hash("password123", 10);
    
    // Liste de tous les comptes avec leurs informations correctes
    const accounts = [
      {
        id: "admin_user",
        prenom: "Admin",
        nom: "Syst√®me",
        email: "admin@gmail.com",
        role: "admin",
        isActive: true,
        status: "active"
      },
      {
        id: "omar_benali_user",
        prenom: "Omar",
        nom: "Benali",
        email: "omar.benali@example.com",
        role: "etudiant",
        isActive: true,
        status: "active"
      },
      {
        id: "fatima_zahra_user",
        prenom: "Fatima",
        nom: "Zahra",
        email: "fatima.zahra@example.com",
        role: "etudiant",
        isActive: true,
        status: "active"
      },
      {
        id: "mohamed_mellouk_user",
        prenom: "Mohamed",
        nom: "Mellouk",
        email: "mohamed.mellouk@example.com",
        role: "etudiant",
        isActive: true,
        status: "active"
      }
    ];

    console.log("üìã Comptes √† corriger :");
    accounts.forEach(account => {
      console.log(`   - ${account.email} (${account.role})`);
    });
    console.log();

    // Corriger chaque compte
    for (const account of accounts) {
      try {
        console.log(`üîç V√©rification du compte ${account.email}...`);
        
        // V√©rifier si le compte existe
        const userRef = db.collection("users").doc(account.id);
        const userDoc = await userRef.get();
        
        if (userDoc.exists) {
          console.log(`   ‚úÖ Compte trouv√©, mise √† jour...`);
          
          // Mettre √† jour le compte avec toutes les informations correctes
          await userRef.set({
            ...account,
            password: hashedPassword,
            createdAt: new Date(),
            updatedAt: new Date()
          }, { merge: true });
          
          console.log(`   ‚úÖ Compte ${account.email} mis √† jour avec succ√®s`);
        } else {
          console.log(`   ‚ö†Ô∏è  Compte non trouv√©, cr√©ation...`);
          
          // Cr√©er le compte s'il n'existe pas
          await userRef.set({
            ...account,
            password: hashedPassword,
            createdAt: new Date(),
            updatedAt: new Date()
          });
          
          console.log(`   ‚úÖ Compte ${account.email} cr√©√© avec succ√®s`);
        }
        
      } catch (error) {
        console.error(`   ‚ùå Erreur pour ${account.email}:`, error.message);
      }
    }

    console.log("\nüß™ V√©rification finale des comptes...");
    
    // V√©rifier que tous les comptes sont correctement configur√©s
    for (const account of accounts) {
      try {
        const userRef = db.collection("users").doc(account.id);
        const userDoc = await userRef.get();
        
        if (userDoc.exists) {
          const userData = userDoc.data();
          console.log(`‚úÖ ${account.email}:`);
          console.log(`   - Email: ${userData.email}`);
          console.log(`   - Role: ${userData.role}`);
          console.log(`   - Actif: ${userData.isActive}`);
          console.log(`   - Statut: ${userData.status}`);
          console.log(`   - Mot de passe: ${userData.password ? 'D√©fini' : 'Manquant'}`);
        } else {
          console.log(`‚ùå ${account.email}: Compte non trouv√©`);
        }
      } catch (error) {
        console.error(`‚ùå Erreur de v√©rification pour ${account.email}:`, error.message);
      }
    }

    console.log("\nüéâ Correction termin√©e !");
    console.log("üìù Informations de connexion :");
    console.log("   - Admin: admin@gmail.com / password123");
    console.log("   - Omar: omar.benali@example.com / password123");
    console.log("   - Fatima: fatima.zahra@example.com / password123");
    console.log("   - Mohamed: mohamed.mellouk@example.com / password123");

  } catch (error) {
    console.error("‚ùå Erreur lors de la correction des comptes:", error);
    throw error;
  }
}

// Ex√©cuter si le script est appel√© directement
if (require.main === module) {
  fixAllAccounts()
    .then(() => {
      console.log("‚úÖ Script termin√© avec succ√®s");
      process.exit(0);
    })
    .catch((error) => {
      console.error("‚ùå Erreur:", error);
      process.exit(1);
    });
}

module.exports = { fixAllAccounts };
